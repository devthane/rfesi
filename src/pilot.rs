//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "pilot")]
pub struct Model {
    #[sea_orm(primary_key)]
    #[serde(skip_deserializing)]
    pub id: i32,
    pub jump_fuel_conservation: Option<i8>,
    pub jump_drive_calibration: Option<i8>,
    pub jump_freighter: Option<i8>,
    pub character_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::characters::Entity",
        from = "Column::CharacterId",
        to = "super::characters::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Characters,
}

impl Related<super::characters::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Characters.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
